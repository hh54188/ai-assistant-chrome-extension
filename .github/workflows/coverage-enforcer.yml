name: Store Coverage Enforcer

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]
    branches: [master]

jobs:
  coverage-enforcer:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      actions: write
      checks: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: chrome-extension/package-lock.json

      - name: Install dependencies
        working-directory: ./chrome-extension
        run: npm ci

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./coverage

      - name: Analyze Coverage Data
        id: analyze-coverage
        run: |
          echo "üîç Analyzing coverage data..."
          node scripts/analyze-coverage-data.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Analyze Uncovered Code for 100% Coverage
        id: analyze-uncovered
        if: steps.analyze-coverage.outputs.coverage-below-100 == 'true'
        run: |
          echo "üß™ Analyzing uncovered code for 100% coverage..."
          node scripts/analyze-uncovered-code.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}

      - name: Generate additional tests
        id: generate-tests
        if: steps.analyze-uncovered.outputs.has-uncovered-code == 'true'
        run: |
          echo "ü§ñ Generating additional tests..."
          node scripts/generate-tests.js
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}

      - name: Run tests to verify coverage improvement
        if: steps.generate-tests.outputs.tests-generated == 'true'
        working-directory: ./chrome-extension
        run: |
          echo "‚úÖ Running tests to verify coverage improvement..."
          npm run test:stores:coverage

      - name: Create Pull Request
        if: steps.generate-tests.outputs.tests-generated == 'true'
        run: |
          echo "üìù Creating pull request..."
          node scripts/create-coverage-pr.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}

      - name: Upload coverage analysis report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-analysis-report
          path: |
            coverage/
            coverage-analysis.json
            test-suggestions.json